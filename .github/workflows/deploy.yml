name: Build and Deploy datax Frontend

on:
  push:
    branches:
      - main

jobs:
  build_and_push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/datax-frontend:latest
          build-args: |
            PORT=8050
          cache-from: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/datax-frontend:cache
          cache-to: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/datax-frontend:cache,mode=max

  deploy:
    needs: build_and_push
    runs-on: ubuntu-latest

    steps:
      - name: Deploy to VPS
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USERNAME }}
          port: 32222
          key: ${{ secrets.VPS_PRIVATE_KEY }}
          script: |
            cd /home/overall/vsp/multi

            # Create shared network if it doesn't exist
            docker network ls | grep -w multi-team-dev-deployment_shared-net || docker network create multi-team-dev-deployment_shared-net

            if [ ! -d "datax" ]; then
              git clone https://github.com/Amirgolli/team-datax-front datax
            fi

            cd datax
            git pull origin main

            # Create .env.datax file with environment variables
            echo "OPENROUTER_API_BASE=${{ secrets.OPENROUTER_API_BASE }}" > .env.datax-front
            echo "OPENROUTER_API_KEY=${{ secrets.OPENROUTER_API_KEY }}" >> .env.datax-front
            echo "JWT_SECRET=${{ secrets.JWT_SECRET }}" >> .env.datax-front
            echo "DATAX_MONGO_URI=${{ secrets.DATAX_MONGO_URI }}" >> .env.datax-front
            echo "DATAX_MONGO_COLLECTION_NAME=${{ secrets.DATAX_MONGO_COLLECTION_NAME }}" >> .env.datax-front
            echo "DATAX_MONGO_DB_NAME=${{ secrets.DATAX_MONGO_DB_NAME }}" >> .env.datax-front
            echo "FRONTEND_URL=${{ secrets.FRONTEND_URL }}" >> .env.datax-front
            echo "SESSION_SECRET_KEY=${{ secrets.SESSION_SECRET_KEY }}" >> .env.datax-front
            echo "DATAX_MINIO_ACCESS_KEY=${{ secrets.DATAX_MINIO_ACCESS_KEY }}" >> .env.datax-front
            echo "DATAX_MINIO_SECRET_KEY=${{ secrets.DATAX_MINIO_SECRET_KEY }}" >> .env.datax-front
            echo "DATAX_MINIO_ENDPOINT=${{ secrets.DATAX_MINIO_ENDPOINT }}" >> .env.datax-front
            echo "DATAX_MINIO_BUCKET_SHEETS=${{ secrets.DATAX_MINIO_BUCKET_SHEETS }}" >> .env.datax-front
            echo "DATAX_MINIO_BUCKET_UPLOADS=${{ secrets.DATAX_MINIO_BUCKET_UPLOADS }}" >> .env.datax-front

            docker compose -f docker-compose.yml pull
            docker compose -f docker-compose.yml up -d --no-build

            echo "âœ… Deployment successful! Visit: http://62.60.198.4:8050"
